#!/usr/bin/env python3
"""
Script para rodar o sistema em modo PRODU√á√ÉO LOCAL
usando Waitress (servidor WSGI profissional)
"""

from waitress import serve
from app import app
import os

def run_production():
    """Roda o sistema em modo produ√ß√£o local"""
    
    print("üöÄ INICIANDO SISTEMA EM MODO PRODU√á√ÉO LOCAL")
    print("=" * 50)
    print("‚úÖ Servidor: Waitress (Produ√ß√£o)")
    print("‚úÖ Ambiente: Local")
    print("‚úÖ Performance: Otimizada para 15+ usu√°rios")
    print("‚úÖ Seguran√ßa: Melhorada")
    print("-" * 50)
    
    # Configura√ß√µes de produ√ß√£o
    os.environ['FLASK_ENV'] = 'production'
    app.config['DEBUG'] = False
    
    # Configura√ß√µes do servidor
    host = '0.0.0.0'  # Permite acesso de outros computadores na rede
    port = 8000       # Porta diferente do desenvolvimento
    
    print(f"üìç Rodando em:")
    print(f"   ‚Ä¢ Local: http://127.0.0.1:{port}")
    print(f"   ‚Ä¢ Rede: http://10.0.50.79:{port}")
    print("-" * 50)
    print("üí° Para parar: Ctrl+C")
    print("üîÑ Sem auto-reload (mais est√°vel)")
    print("‚ö° Performance otimizada para 15+ usu√°rios simult√¢neos")
    print("üè¢ Ideal para prefeituras com m√∫ltiplos funcion√°rios")
    print("=" * 50)
    
    try:
        # Iniciar servidor Waitress
        serve(
            app,
            host=host,
            port=port,
            threads=20,       # Suporta 20 usu√°rios simult√¢neos
            cleanup_interval=30,
            channel_timeout=120,
            connection_limit=100,  # M√°ximo 100 conex√µes
            send_bytes=18000       # Buffer otimizado
        )
    except KeyboardInterrupt:
        print("\n\n‚úÖ Servidor parado pelo usu√°rio")
    except Exception as e:
        print(f"\n‚ùå Erro no servidor: {e}")

if __name__ == "__main__":
    run_production()
